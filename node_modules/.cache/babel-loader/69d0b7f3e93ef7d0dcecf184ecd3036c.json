{"ast":null,"code":"var _jsxFileName = \"D:\\\\react js\\\\demoapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [alert, setalert]=useState(null)\n  // const showAlert = (massage,type)=>{\n  //   setalert({\n  //     msg : massage,\n  //     type : type\n  //   })\n  // }\n  const [mode, setMode] = useState('light');\n  const [bgColor, setBgColor] = useState('white');\n\n  const darkMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#24074b';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n\n    if (bgColor === 'white') {\n      setBgColor('black');\n    } else {\n      setBgColor('white');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      mode: mode,\n      darkMode: darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {\n      bgColor: bgColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"t5evOiigpaD+VnxtNR6XGiJrfjM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","About","Navbar","App","mode","setMode","bgColor","setBgColor","darkMode","document","body","style","backgroundColor"],"sources":["D:/react js/demoapp/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n\n  \n  // const [alert, setalert]=useState(null)\n  // const showAlert = (massage,type)=>{\n    //   setalert({\n      //     msg : massage,\n      //     type : type\n      //   })\n      // }\n      \n  const [mode, setMode]=useState('light')\n  const [bgColor, setBgColor]=useState('white')\n  const darkMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#24074b';\n      \n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n\n    }\n    if(bgColor==='white'){\n      setBgColor('black');\n    }\n    else{\n      setBgColor('white');\n    }\n    \n  }\n\n  \n  return (\n    <>\n      <Navbar mode={mode} darkMode={darkMode}/>\n      <About  bgColor={bgColor}/>\n    </>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAGb;EACA;EACE;EACE;EACA;EACA;EACA;EAEJ,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAgBL,QAAQ,CAAC,OAAD,CAA9B;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAsBP,QAAQ,CAAC,OAAD,CAApC;;EACA,MAAMQ,QAAQ,GAAG,MAAI;IACnB,IAAGJ,IAAI,KAAK,OAAZ,EAAoB;MAClBC,OAAO,CAAC,MAAD,CAAP;MACAI,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,SAApC;IAED,CAJD,MAKI;MACFP,OAAO,CAAC,OAAD,CAAP;MACAI,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAoC,OAApC;IAED;;IACD,IAAGN,OAAO,KAAG,OAAb,EAAqB;MACnBC,UAAU,CAAC,OAAD,CAAV;IACD,CAFD,MAGI;MACFA,UAAU,CAAC,OAAD,CAAV;IACD;EAEF,CAlBD;;EAqBA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,IAAI,EAAEH,IAAd;MAAoB,QAAQ,EAAEI;IAA9B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAQ,OAAO,EAAEF;IAAjB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAOD;;GAzCQH,G;;KAAAA,G;AA2CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}